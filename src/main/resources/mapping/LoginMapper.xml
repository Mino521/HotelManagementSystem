<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.LoginMapper">
    <resultMap type="entity.FirstClassMenu" id="firstClassMenu">
        <result property="id" javaType="Long" column="id" jdbcType="BIGINT"/>
        <result property="name" javaType="String" column="firstClassName" jdbcType="VARCHAR"/>
        <collection property="secondClassMenuList" ofType="entity.SecondClassMenu">
            <result property="name" javaType="String" column="secondClassName" jdbcType="VARCHAR"/>
            <result property="url" javaType="String" column="url" jdbcType="VARCHAR"/>
            <result property="parent" javaType="Long" column="parent" jdbcType="BIGINT"/>
        </collection>
    </resultMap>
    <select id="getMenus" resultMap="firstClassMenu">
        SELECT * FROM
        (SELECT id, authority_name AS firstClassName FROM sys_authority
        WHERE parent = 0) m1
        INNER JOIN
        (SELECT authority_name AS secondClassName, authority_url AS url, parent FROM sys_authority
        WHERE parent != 0) m2
        ON m1.id = m2.parent;
    </select>

    <resultMap type="entity.FirstClassMenu" id="firstClassMenuByUserId">
        <result property="id" javaType="Long" column="id" jdbcType="BIGINT"/>
        <result property="name" javaType="String" column="firstClassAuthority" jdbcType="VARCHAR"/>
        <collection property="secondClassMenuList" ofType="entity.SecondClassMenu">
            <result property="name" javaType="String" column="secondClassAuthority" jdbcType="VARCHAR"/>
            <result property="url" javaType="String" column="url" jdbcType="VARCHAR"/>
            <result property="parent" javaType="Long" column="parent" jdbcType="BIGINT"/>
        </collection>
    </resultMap>
    <select id="getMenusByUserId" resultMap="firstClassMenuByUserId" parameterType="Long">
        select * from
        (SELECT sa.id, authority_name as firstClassAuthority from sys_usr su
        inner join user_authority ua
        ON su.id = ua.user_id
        inner join sys_authority sa
        on sa.id = ua.authority_id
        where user_id = #{userId} and parent = 0) t1
        inner join
        (SELECT authority_name as secondClassAuthority, authority_url as url, sa.parent from sys_usr su
        inner join user_authority ua
        ON su.id = ua.user_id
        inner join sys_authority sa
        on sa.id = ua.authority_id
        where user_id = #{userId} and parent != 0) t2
        on t1.id = t2.parent;
    </select>
</mapper>